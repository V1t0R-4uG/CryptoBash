#!/usr/bin/env bash

trap 'echo -e "\n${RED}User interruption !${NC}\n"; exit 1' SIGINT

api_key=$(cat ~/.key)

select=$(cat ./crypto_id | fzf -i --border --black)

if [[ $select == '' ]]; then
  exit 1;
fi
echo ""
printf "        \033[0;31m$select\e[0m \n"

getAllDataByID() {
   curl -s --request GET \
	--url 'https://coingecko.p.rapidapi.com/coins/'$select'?localization=true&tickers=true&market_data=true&community_data=true&developer_data=true&sparkline=false' \
	--header 'X-RapidAPI-Host: coingecko.p.rapidapi.com' \
	--header 'X-RapidAPI-Key: '$api_key''
}

coinData=$(getAllDataByID)

getCurrentPriceInUSD() {
  echo $coinData | jq '.market_data.current_price.usd'
}

getCurrentPriceInBTC() {
  echo $coinData | jq '.market_data.current_price.btc'
}

getMarketCap() {
  echo $coinData | jq '.market_data.market_cap.usd'
}

get24hVolume() {
  echo $coinData | jq '.market_data.total_volume.usd'
}

getCirculatingSupply() {
  echo $coinData | jq '.market_data.circulating_supply'
}

getMaxSupply() {
  echo $coinData | jq '.market_data.max_supply'
}

priceInUSD=$(getCurrentPriceInUSD)
priceInBTC=$(getCurrentPriceInBTC)
marketCap=$(getMarketCap)
volumeInLast24h=$(get24hVolume)
circulatingSupplu=$(getCirculatingSupply)
maxSupply=$(getMaxSupply)

echo ""
LC_ALL=C printf "price in BTC :: \e[0;33mÔçπ  %.7f\n\e[0m" "$priceInBTC"
LC_ALL=C printf "price in USD :: \e[0;33m$ %.2f\n\e[0m" "$priceInUSD"
LC_ALL=C printf "Market cap :: \e[0;33m$ %.2f\n\e[0m" "$marketCap"
LC_ALL=C printf "volume in the last 24h :: \e[0;33m$ %.2f\n\e[0m" "$volumeInLast24h"
LC_ALL=C printf "Circulating Supply :: \e[0;33m$ %.2f\n\e[0m" "$circulatingSupplu"
if [[ $maxSupply -ne 'null' ]];then
  LC_ALL=C printf "Max Supply :: \e[0;33m$ %.2f\n\e[0m" "$maxSupply"
fi
echo ""

exit 0
